[{"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\index.tsx":"1","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\stoom.tsx":"2","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\route-manager.tsx":"3","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\history.ts":"4","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\pages.ts":"5","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\private-route.tsx":"6","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOfDay\\index.tsx":"7","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\ts\\interfaces\\enum\\route-enum\\index.ts":"8","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaFilling\\index.tsx":"9","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOrder\\index.tsx":"10","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSize\\index.tsx":"11","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSideDish\\index.tsx":"12","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaTypePasta\\index.tsx":"13","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaPayment\\index.tsx":"14","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaWelcome\\index.tsx":"15","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\store\\context.tsx":"16","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaPage\\index.tsx":"17","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaPage\\styles.ts":"18","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\styles\\global.ts":"19","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\styles.ts":"20","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaButton\\index.tsx":"21","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaButton\\styles.ts":"22","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaOnlyBorderButton\\index.tsx":"23","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaOnlyBorderButton\\styles.ts":"24","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSize\\styles.ts":"25","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaFilling\\styles.ts":"26","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOfDay\\styles.ts":"27","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOrder\\styles.ts":"28","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaPayment\\styles.ts":"29","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSideDish\\styles.ts":"30","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaTypePasta\\styles.ts":"31","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaWelcome\\styles.ts":"32","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\api\\index.tsx":"33","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\api\\utils\\statecharts\\fetchMachine.js":"34","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\ts\\interfaces\\enum\\fetch-enums\\index.ts":"35"},{"size":191,"mtime":1608507822705,"results":"36","hashOfConfig":"37"},{"size":867,"mtime":1608529248549,"results":"38","hashOfConfig":"37"},{"size":1755,"mtime":1608445683611,"results":"39","hashOfConfig":"37"},{"size":89,"mtime":1608393588208,"results":"40","hashOfConfig":"37"},{"size":2643,"mtime":1608445649837,"results":"41","hashOfConfig":"37"},{"size":398,"mtime":1608409345605,"results":"42","hashOfConfig":"37"},{"size":3095,"mtime":1608528940044,"results":"43","hashOfConfig":"37"},{"size":76,"mtime":1608396035043,"results":"44","hashOfConfig":"37"},{"size":2984,"mtime":1608528940044,"results":"45","hashOfConfig":"37"},{"size":6798,"mtime":1608528940044,"results":"46","hashOfConfig":"37"},{"size":2998,"mtime":1608528940044,"results":"47","hashOfConfig":"37"},{"size":2903,"mtime":1608528940044,"results":"48","hashOfConfig":"37"},{"size":3050,"mtime":1608528940044,"results":"49","hashOfConfig":"37"},{"size":3287,"mtime":1608528940044,"results":"50","hashOfConfig":"37"},{"size":1832,"mtime":1608525968791,"results":"51","hashOfConfig":"37"},{"size":568,"mtime":1608397948125,"results":"52","hashOfConfig":"37"},{"size":763,"mtime":1608529222231,"results":"53","hashOfConfig":"37"},{"size":918,"mtime":1608438943671,"results":"54","hashOfConfig":"37"},{"size":918,"mtime":1608417445001,"results":"55","hashOfConfig":"37"},{"size":682,"mtime":1608418047018,"results":"56","hashOfConfig":"37"},{"size":878,"mtime":1608445132772,"results":"57","hashOfConfig":"37"},{"size":1000,"mtime":1608526707177,"results":"58","hashOfConfig":"37"},{"size":889,"mtime":1608528940044,"results":"59","hashOfConfig":"37"},{"size":1124,"mtime":1608526717330,"results":"60","hashOfConfig":"37"},{"size":1382,"mtime":1608526624021,"results":"61","hashOfConfig":"37"},{"size":1383,"mtime":1608526645669,"results":"62","hashOfConfig":"37"},{"size":1202,"mtime":1608518189521,"results":"63","hashOfConfig":"37"},{"size":2352,"mtime":1608528324898,"results":"64","hashOfConfig":"37"},{"size":1303,"mtime":1608526633038,"results":"65","hashOfConfig":"37"},{"size":1383,"mtime":1608526604115,"results":"66","hashOfConfig":"37"},{"size":1382,"mtime":1608526617499,"results":"67","hashOfConfig":"37"},{"size":963,"mtime":1608526612349,"results":"68","hashOfConfig":"37"},{"size":661,"mtime":1608513575040,"results":"69","hashOfConfig":"37"},{"size":1117,"mtime":1608497724784,"results":"70","hashOfConfig":"37"},{"size":130,"mtime":1608484105767,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"eas8jz",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\index.tsx",[],["152","153"],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\stoom.tsx",["154"],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\route-manager.tsx",["155","156","157"],"import React, { useCallback, useContext } from 'react';\r\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\r\nimport history from './history';\r\nimport PrivateRout from './private-route';\r\nimport getApplicationPages from './pages';\r\nimport { IPage } from '../ts/interfaces/route-interfaces';\r\nimport { CommonsContext } from '../store/context';\r\nimport { Templates } from '../ts/interfaces/enum/route-enum';\r\n\r\nexport const RouteContext: React.Context<{}> = React.createContext({});\r\nconst RouteProvider: React.FC = () => {\r\n  const { pages, product }: any = useContext(CommonsContext);\r\n  const finalPages: IPage[] = getApplicationPages(pages, product);\r\n\r\n  /**\r\n   * @description Change current route.\r\n   * @param {string} alias page alias.\r\n   * @param {string} tab page tab.\r\n   */\r\n  const changeRoute = useCallback((alias: string, tab?: string): void => {\r\n    const pageAlias = finalPages.filter((page: IPage) => page.alias === alias);\r\n    if (pageAlias.length === 1) {\r\n      const path: string | undefined = pageAlias.pop()?.path;\r\n      tab ? history.push(`${path}/${tab}` || '') : history.push(path || '');\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <RouteContext.Provider value={{ changeRoute }}>\r\n      <Router history={history}>\r\n        <Switch>\r\n          {finalPages.map((page: IPage, index: number) => {\r\n            return (\r\n              <Route\r\n                key={`route-${index}`}\r\n                path={page.path}\r\n                component={page.pageComponent}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect from=\"*\" to={`/${product}/stoom-welcome`} />\r\n        </Switch>\r\n      </Router>\r\n    </RouteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RouteProvider;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\history.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\pages.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\routes\\private-route.tsx",["158","159","160"],"import React, { useContext, useMemo } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { CommonsContext } from '../store/context';\r\n\r\nconst PrivateRoute: React.FC<any> = ({ component: Component, ...props }) => {\r\n  const { product, loggedUser }: any = useContext(CommonsContext);\r\n  return (\r\n    <Redirect to={`/${product}/stoom-welcome`} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;",["161","162"],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOfDay\\index.tsx",["163","164"],"import React, {useContext, useEffect, useLayoutEffect, useState} from 'react';\r\nimport PizzariaPage from '../../components/PizzariaPage';\r\nimport { RouteContext } from '../../routes/route-manager';\r\nimport { PizzariaButton } from '../../components/PizzariaButton';\r\nimport { StyButtonContainer, StyContainerItems, StyItems, StyContainer } from './styles';\r\nimport { PizzariaOnlyBorderButton } from '../../components/PizzariaOnlyBorderButton';\r\nimport { apiPizzaOfDay } from '../../api/index';\r\n\r\nexport const PizzaOfDay: React.FC = () => {\r\n\r\n    const { changeRoute }: any = useContext(RouteContext);\r\n    const [state, setState] = useState<any>();\r\n    const [arrayPizzaDay, setArrayPizzaDay] = useState<string[]>([]);\r\n    const [selectedPizzaDay, setSelectedPizzaDay] = useState<boolean>(false);\r\n    //const typePastaArray: string[] = arrayPasta?.split(replce);\r\n\r\n    useLayoutEffect(() => {\r\n        sessionStorage.removeItem('typePasta');\r\n        sessionStorage.removeItem('pizzaSize');\r\n        sessionStorage.removeItem('pizzaFilling');\r\n        sessionStorage.removeItem('pizzaDay');\r\n        sessionStorage.removeItem('pizzaSideDish');\r\n        sessionStorage.removeItem('personalInformation');\r\n    }, []);\r\n\r\n        async function getPizzaTypePasta() {\r\n            const response = await apiPizzaOfDay.get('');\r\n            setArrayPizzaDay(response.data);\r\n        }\r\n\r\n        useLayoutEffect(() => {\r\n            getPizzaTypePasta();\r\n        }, [state]);\r\n\r\n        function handleSelectedPizzaDay(typePasta: boolean) {\r\n            setSelectedPizzaDay(typePasta);\r\n        }\r\n\r\n        function handleSubmit() {\r\n            sessionStorage.setItem('pizzaDay', arrayPizzaDay?.toString());\r\n            changeRoute('pizza-side-dish');\r\n        }\r\n        \r\n        return (\r\n            <PizzariaPage hasMargin={true} hasShadow={true}>\r\n                <StyContainer>\r\n                <span>Hoje temos a seguinte pizza em promoção:</span>\r\n                <StyContainerItems selected={selectedPizzaDay ? true : false}>\r\n                {arrayPizzaDay?.map((element: any, index: any) => \r\n                {\r\n                  return (\r\n                      <StyItems id={`${element}-items-id`} key={index} onClick={() => handleSelectedPizzaDay(true)} >\r\n                        <div id={`${index}-id`} key={index} >\r\n                            <span>{element}</span>\r\n                        </div>\r\n                        </StyItems>\r\n                    )  \r\n                }\r\n                )}\r\n                </StyContainerItems>\r\n                <span>Ao juntar 100 pontos você ganha uma pizza GRÁTIS! =D</span>\r\n                </StyContainer>\r\n                <StyButtonContainer>\r\n                    <PizzariaOnlyBorderButton id=\"button-id\" action={() => changeRoute('stoom-welcome')} title=\"Voltar\"/>\r\n                    <PizzariaButton id=\"button-id\" action={() => handleSubmit()} title=\"Próximo\" disable={selectedPizzaDay ? false : true}/>\r\n                </StyButtonContainer>\r\n            </PizzariaPage>\r\n        );\r\n}\r\n\r\nexport default PizzaOfDay;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\ts\\interfaces\\enum\\route-enum\\index.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaFilling\\index.tsx",["165"],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOrder\\index.tsx",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSize\\index.tsx",["166"],"import React, {useContext, useLayoutEffect, useState} from 'react';\r\nimport PizzariaPage from '../../components/PizzariaPage';\r\nimport { RouteContext } from '../../routes/route-manager';\r\nimport { PizzariaButton } from '../../components/PizzariaButton';\r\nimport { PizzariaOnlyBorderButton } from '../../components/PizzariaOnlyBorderButton';\r\nimport { StyButtonContainer, StySpanContainer, StyItems, StyContainerItems } from './styles';\r\nimport { apiPizzaSize } from '../../api/index';\r\n\r\nexport const PizzaSize: React.FC = () => {\r\n    const { changeRoute }: any = useContext(RouteContext);\r\n    const [state, setState] = useState<any>();\r\n    const [arraySize, setArraySize] = useState<string[]>();\r\n    const [selectedPizzaSize, setSelectedPizzaSize] = useState<string>('');\r\n    //const typePastaArray: string[] = arrayPasta?.split(replce);\r\n\r\n    useLayoutEffect(() => {\r\n        sessionStorage.removeItem('pizzaSize');\r\n        sessionStorage.removeItem('pizzaFilling');\r\n        sessionStorage.removeItem('pizzaDay');\r\n        sessionStorage.removeItem('pizzaSideDish');\r\n        sessionStorage.removeItem('personalInformation');\r\n    }, []);\r\n\r\n        async function getPizzaTypePasta() {\r\n            const response = await apiPizzaSize.get('');\r\n            setArraySize(response.data);\r\n        }\r\n\r\n        useLayoutEffect(() => {\r\n            getPizzaTypePasta();\r\n        }, [state]);\r\n\r\n        function handleSelectedPizzaSize(typePasta: string) {\r\n            setSelectedPizzaSize(typePasta);\r\n        }\r\n\r\n        function handleSubmit() {\r\n            sessionStorage.setItem('pizzaSize', selectedPizzaSize);\r\n            changeRoute('pizza-filling');\r\n        }\r\n        \r\n        return (\r\n            <PizzariaPage hasMargin={true} hasShadow={true}>\r\n                <StySpanContainer>\r\n                <span>Escolha o tamanho da pizza e clique em \"Próximo\"</span>\r\n                <StyContainerItems>\r\n                {arraySize?.map((element: any, index: any) => \r\n                {\r\n                  return (\r\n                      <StyItems id={`${element}-items-id`} key={index} onClick={() => handleSelectedPizzaSize(element)} selected={selectedPizzaSize === element ? true : false}>\r\n                        <div id={`${index}-id`} key={index} >\r\n                            <span>{element}</span>\r\n                        </div>\r\n                        </StyItems>\r\n                    )  \r\n                }\r\n                )}\r\n                </StyContainerItems>\r\n                <span>Passo 3 de 7</span>\r\n            </StySpanContainer>\r\n                <StyButtonContainer>\r\n                    <PizzariaOnlyBorderButton id=\"button-id\" action={() => changeRoute('pizza-type-of-pasta')} title=\"Voltar\"/>\r\n                    <PizzariaButton id=\"button-id\" action={() =>  handleSubmit()} title=\"Próximo\" disable={selectedPizzaSize ? false : true}/>\r\n                </StyButtonContainer>\r\n            </PizzariaPage>\r\n        );\r\n}\r\n\r\nexport default PizzaSize;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSideDish\\index.tsx",["167"],"import React, {useContext, useLayoutEffect, useState} from 'react';\r\nimport PizzariaPage from '../../components/PizzariaPage';\r\nimport { RouteContext } from '../../routes/route-manager';\r\nimport { PizzariaButton } from '../../components/PizzariaButton';\r\nimport { PizzariaOnlyBorderButton } from '../../components/PizzariaOnlyBorderButton';\r\nimport { StyButtonContainer, StySpanContainer, StyItems, StyContainerItems } from './styles';\r\nimport { apiPizzaSideDish } from '../../api/index';\r\n\r\nexport const PizzaSideDish: React.FC = () => {\r\n\r\n    const { changeRoute }: any = useContext(RouteContext);\r\n    const [state, setState] = useState<any>();\r\n    const [arraySideDish, setArraySideDish] = useState<string[]>();\r\n    const [selectedSideDish, setSelectedSideDish] = useState<string>('');\r\n    //const typePastaArray: string[] = arrayPasta?.split(replce);\r\n\r\n    useLayoutEffect(() => {\r\n        sessionStorage.removeItem('pizzaSideDish');\r\n        sessionStorage.removeItem('personalInformation');\r\n    }, []);\r\n\r\n        async function getPizzaTypePasta() {\r\n            const response = await apiPizzaSideDish.get('');\r\n            setArraySideDish(response.data);\r\n        }\r\n\r\n        useLayoutEffect(() => {\r\n            getPizzaTypePasta();\r\n        }, [state]);\r\n\r\n        function handleSelectedPizzaSize(typePasta: string) {\r\n            setSelectedSideDish(typePasta);\r\n        }\r\n\r\n        function handleSubmit() {\r\n            sessionStorage.setItem('pizzaSideDish', selectedSideDish);\r\n            changeRoute('pizza-payment');\r\n        }\r\n        \r\n        return (\r\n            <PizzariaPage hasMargin={true} hasShadow={true}>\r\n            <StySpanContainer>\r\n                <span>Gostaria de adicionar algum acompanhamento ao seu pedido? (Este passo é opcional)</span>\r\n                <StyContainerItems>\r\n                {arraySideDish?.map((element: any, index: any) => \r\n                {\r\n                  return (\r\n                      <StyItems id={`${element}-items-id`} key={index} onClick={() => handleSelectedPizzaSize(element)} selected={selectedSideDish === element ? true : false}>\r\n                        <div id={`${index}-id`} key={index} >\r\n                            <span>{element}</span>\r\n                        </div>\r\n                        </StyItems>\r\n                    )  \r\n                }\r\n                )}\r\n                </StyContainerItems>\r\n                <span>Passo 5 de 7</span>\r\n            </StySpanContainer>\r\n                <StyButtonContainer>\r\n                    <PizzariaOnlyBorderButton id=\"button-id\" action={() => changeRoute('pizza-filling')} title=\"Voltar\"/>\r\n                    <PizzariaButton id=\"button-id\" action={() => handleSubmit()} title=\"Próximo\" disable={selectedSideDish ? false : true}/>\r\n                </StyButtonContainer>\r\n            </PizzariaPage>\r\n        );\r\n}\r\n\r\nexport default PizzaSideDish;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaTypePasta\\index.tsx",["168"],"import React, {useContext, useLayoutEffect, useState} from 'react';\r\nimport PizzariaPage from '../../components/PizzariaPage';\r\nimport { RouteContext } from '../../routes/route-manager';\r\nimport { PizzariaButton } from '../../components/PizzariaButton';\r\nimport { PizzariaOnlyBorderButton } from '../../components/PizzariaOnlyBorderButton';\r\nimport { StyButtonContainer, StySpanContainer, StyItems, StyContainerItems } from './styles';\r\nimport { apiTypePasta } from '../../api/index';\r\n\r\nexport const PizzaTypePasta: React.FC = () => {\r\n    const { changeRoute }: any = useContext(RouteContext);\r\n    const [state, setState] = useState<any>();\r\n    const [arrayPasta, setArrayPasta] = useState<string[]>();\r\n    const [selectedTypePasta, setSelectedTypePasta] = useState<string>('');\r\n    //const typePastaArray: string[] = arrayPasta?.split(replce);\r\n\r\n    useLayoutEffect(() => {\r\n        sessionStorage.removeItem('typePasta');\r\n        sessionStorage.removeItem('pizzaSize');\r\n        sessionStorage.removeItem('pizzaFilling');\r\n        sessionStorage.removeItem('pizzaDay');\r\n        sessionStorage.removeItem('pizzaSideDish');\r\n        sessionStorage.removeItem('personalInformation');\r\n    }, []);\r\n\r\n        async function getPizzaTypePasta() {\r\n            const response = await apiTypePasta.get('');\r\n            setArrayPasta(response.data);\r\n        }\r\n\r\n        useLayoutEffect(() => {\r\n            getPizzaTypePasta();\r\n        }, [state]);\r\n\r\n        function handleSelectedTypePasta(typePasta: string) {\r\n            setSelectedTypePasta(typePasta);\r\n        }\r\n\r\n        function handleSubmit() {\r\n            sessionStorage.setItem('typePasta', selectedTypePasta);\r\n            changeRoute('pizza-size')\r\n        }\r\n        \r\n        return (\r\n            <PizzariaPage hasMargin={true} hasShadow={true}>\r\n                <StySpanContainer>\r\n                <span>Escolha o tipo da sua massa e clique em \"Próximo\"</span>\r\n                <StyContainerItems>\r\n                {arrayPasta?.map((element: any, index: any) => \r\n                {\r\n                  return (\r\n                      <StyItems id={`${element}-items-id`} key={index} onClick={() => handleSelectedTypePasta(element)} selected={element === selectedTypePasta ? true : false}>\r\n                        <div id={`${index}-id`} key={index} >\r\n                            <span>{element}</span>\r\n                        </div>\r\n                        </StyItems>\r\n                    )  \r\n                }\r\n                )}\r\n                </StyContainerItems>\r\n                <span>Passo 2 de 7</span>\r\n            </StySpanContainer>\r\n                <StyButtonContainer>\r\n                    <PizzariaOnlyBorderButton id=\"button-id\" action={() => changeRoute('stoom-welcome')} title=\"Voltar\"/>\r\n                    <PizzariaButton id=\"button-id\" action={() => handleSubmit()} title=\"Próximo\" disable={selectedTypePasta? false : true}/>\r\n                </StyButtonContainer>\r\n            </PizzariaPage>\r\n        );\r\n}\r\n\r\nexport default PizzaTypePasta;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaPayment\\index.tsx",["169"],"import React, {useContext, useEffect, useLayoutEffect, useState} from 'react';\r\nimport PizzariaPage from '../../components/PizzariaPage';\r\nimport { RouteContext } from '../../routes/route-manager';\r\nimport { PizzariaButton } from '../../components/PizzariaButton';\r\nimport { PizzariaOnlyBorderButton } from '../../components/PizzariaOnlyBorderButton';\r\nimport { StyButtonContainer, StySpanContainer, StyItems, StyRegister, StyRow, StyInputContent } from './styles';\r\n\r\nexport const PizzaPayment: React.FC = () => {\r\n\r\n    const { changeRoute }: any = useContext(RouteContext);\r\n    const [name, setName] = useState<string>('');\r\n    const [address, setAddress] = useState<string>('');\r\n    const [phone, setPhone] = useState<string | number>('');\r\n    const [email, setEmail] = useState<string>('');\r\n\r\n    useLayoutEffect(() => {\r\n        sessionStorage.removeItem('personalInformation');\r\n    }, []);\r\n\r\n    function onSubmit() {\r\n        sessionStorage.setItem('personalInformation', `Nome: ${name}; Endereço: ${address}; Telefone: ${phone}; Email: ${email}`);\r\n        changeRoute('pizza-order');\r\n    }\r\n        \r\n        return (\r\n            <PizzariaPage hasMargin={true} hasShadow={true}>\r\n            <StySpanContainer>\r\n                <span>Por favor, preencha o cadastro e selecione a forma de pagamento.</span>\r\n                    <StyRegister id=\"input-container-id\">\r\n                        <StyRow id=\"row-1-id\">\r\n                            <StyInputContent id=\"input-1-id\">\r\n                                <span>Nome</span>\r\n                                <input id=\"input-name-id\" onChange={(data: any) => setName(data.target.value)}/>\r\n                            </StyInputContent>\r\n                            <StyInputContent id=\"input-2-id\">\r\n                                <span>Endereço</span>\r\n                                <input id=\"input-address-id\" onChange={(data: any) => setAddress(data.target.value)}/>\r\n                            </StyInputContent>\r\n                        </StyRow>\r\n                        <StyRow id=\"row-2-id\">\r\n                            <StyInputContent id=\"input-3-id\">\r\n                                <span>Telefone</span>\r\n                                <input id=\"input-phone-id\" onChange={(data: any) => setPhone(data.target.value)}/>\r\n                            </StyInputContent>\r\n                            <StyInputContent id=\"input-4-id\">\r\n                                <span>Email</span>\r\n                                <input id=\"input-email-id\" onChange={(data: any) => setEmail(data.target.value)}/>\r\n                            </StyInputContent>\r\n                        </StyRow>\r\n                    </StyRegister>\r\n                    <StyItems>\r\n\r\n                    </StyItems>\r\n                <span>Passo 6 de 7</span>\r\n            </StySpanContainer>\r\n                <StyButtonContainer>\r\n                    <PizzariaOnlyBorderButton id=\"button-id\" action={() => changeRoute('pizza-side-dish')} title=\"Voltar\"/>\r\n                    <PizzariaButton disable={name && address && phone && email ? false : true} id=\"button-id\" action={() => onSubmit()} title=\"Próximo\"/>\r\n                </StyButtonContainer>\r\n            </PizzariaPage>\r\n        );\r\n}\r\n\r\nexport default PizzaPayment;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaWelcome\\index.tsx",["170","171"],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\store\\context.tsx",["172","173"],"import React, { useEffect, useState } from 'react';\r\nimport { IPage } from '../ts/interfaces/route-interfaces';\r\n\r\ninterface ICommonsProvider {\r\n  product: string;\r\n  pages: IPage[];\r\n}\r\n\r\nexport const CommonsContext: React.Context<{}> = React.createContext({});\r\nconst CommonsProvider: React.FC<ICommonsProvider> = ({\r\n  product,\r\n  pages,\r\n  children,\r\n}) => {\r\n\r\n  return (\r\n    <CommonsContext.Provider\r\n      value={{\r\n        product,\r\n        pages,\r\n      }}\r\n    >\r\n      {children}\r\n    </CommonsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CommonsProvider;","C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaPage\\index.tsx",["174","175","176","177"],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaPage\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\styles\\global.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaButton\\index.tsx",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaButton\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaOnlyBorderButton\\index.tsx",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\components\\PizzariaOnlyBorderButton\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSize\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaFilling\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOfDay\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaOrder\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaPayment\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaSideDish\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaTypePasta\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\pages\\pizzaWelcome\\styles.ts",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\api\\index.tsx",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\api\\utils\\statecharts\\fetchMachine.js",[],"C:\\Users\\gusta\\Desktop\\ProjetoStoom\\desafioStoom\\desafio-stoom-pizzaria\\src\\stoomPizzaria\\ts\\interfaces\\enum\\fetch-enums\\index.ts",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":25,"column":9,"nodeType":"184","endLine":25,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"189","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":27,"column":6,"nodeType":"192","endLine":27,"endColumn":8,"suggestions":"193"},{"ruleId":"185","severity":1,"message":"194","line":1,"column":29,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"195","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":15},{"ruleId":"185","severity":1,"message":"196","line":6,"column":20,"nodeType":"187","messageId":"188","endLine":6,"endColumn":30},{"ruleId":"178","replacedBy":"197"},{"ruleId":"180","replacedBy":"198"},{"ruleId":"185","severity":1,"message":"199","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":37},{"ruleId":"185","severity":1,"message":"200","line":12,"column":19,"nodeType":"187","messageId":"188","endLine":12,"endColumn":27},{"ruleId":"185","severity":1,"message":"200","line":12,"column":19,"nodeType":"187","messageId":"188","endLine":12,"endColumn":27},{"ruleId":"185","severity":1,"message":"200","line":11,"column":19,"nodeType":"187","messageId":"188","endLine":11,"endColumn":27},{"ruleId":"185","severity":1,"message":"200","line":12,"column":19,"nodeType":"187","messageId":"188","endLine":12,"endColumn":27},{"ruleId":"185","severity":1,"message":"200","line":11,"column":19,"nodeType":"187","messageId":"188","endLine":11,"endColumn":27},{"ruleId":"185","severity":1,"message":"199","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":37},{"ruleId":"185","severity":1,"message":"199","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":37},{"ruleId":"185","severity":1,"message":"201","line":1,"column":56,"nodeType":"187","messageId":"188","endLine":1,"endColumn":64},{"ruleId":"185","severity":1,"message":"199","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"201","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"199","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"201","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"202","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":24,"column":7,"nodeType":"184","endLine":24,"endColumn":30},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'PrivateRout' is defined but never used.","Identifier","unusedVar","'Templates' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'finalPages'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'useMemo' is defined but never used.","'Route' is defined but never used.","'loggedUser' is assigned a value but never used.",["203"],["204"],"'useEffect' is defined but never used.","'setState' is assigned a value but never used.","'useState' is defined but never used.","'apiTypePasta' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},"Update the dependencies array to be: [finalPages]",{"range":"208","text":"209"},[1181,1183],"[finalPages]"]